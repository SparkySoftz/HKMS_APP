<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analytics & Reports - HKMS Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: white;
            padding-bottom: 3rem;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 0;
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header h1 {
            font-size: 2rem;
            font-weight: bold;
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .admin-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .admin-badge {
            background: rgba(255, 215, 0, 0.9);
            color: #333;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.9rem;
        }
        
        .back-btn, .logout-btn {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 0.5rem 1rem;
            border-radius: 8px;
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }
        
        .back-btn:hover, .logout-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            color: white;
            text-decoration: none;
        }
        
        .dashboard-container {
            padding: 3rem 0;
        }
        
        .welcome-section {
            text-align: center;
            margin-bottom: 3rem;
            animation: fadeInDown 1s ease-out;
        }
        
        .welcome-section h2 {
            font-size: 3rem;
            font-weight: bold;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .welcome-section p {
            font-size: 1.3rem;
            opacity: 0.9;
            margin-bottom: 0;
        }
        
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 1.5rem;
            text-align: center;
            backdrop-filter: blur(5px);
        }
        
        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            font-size: 1rem;
            opacity: 0.8;
        }
        
        .chart-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 2rem;
            margin-top: 2rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .chart-container h3 {
            margin-bottom: 1.5rem;
            text-align: center;
        }
        
        .revenue-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }
        
        .revenue-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 1.5rem;
            text-align: center;
            backdrop-filter: blur(5px);
        }
        
        .revenue-amount {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            color: #4CAF50;
        }
        
        .top-items-table {
            width: 100%;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            overflow: hidden;
            margin-top: 1rem;
        }
        
        .top-items-table th {
            background: rgba(255, 255, 255, 0.2);
            padding: 1rem;
            text-align: left;
        }
        
        .top-items-table td {
            padding: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .rating-badge {
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
        }
        
        .rating-5 { background: rgba(76, 175, 80, 0.3); }
        .rating-4 { background: rgba(139, 195, 74, 0.3); }
        .rating-3 { background: rgba(255, 193, 7, 0.3); }
        .rating-2 { background: rgba(255, 152, 0, 0.3); }
        .rating-1 { background: rgba(244, 67, 54, 0.3); }
        
        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                gap: 1rem;
            }
            
            .welcome-section h2 {
                font-size: 2.5rem;
            }
            
            .stats-container {
                grid-template-columns: 1fr 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container">
            <div class="header-content">
                <h1>
                    <i class="fas fa-chart-line me-2"></i>
                    HKMS Analytics & Reports
                </h1>
                <div class="admin-info">
                    <div class="admin-badge">
                        <i class="fas fa-user-shield me-2"></i>
                        ADMIN
                    </div>
                    <a href="<%= admin_dashboard_path %>" class="back-btn">
                        <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
                    </a>
                    <%= link_to admin_logout_path, method: :delete, class: "logout-btn" do %>
                        <i class="fas fa-sign-out-alt me-2"></i>Logout
                    <% end %>
                </div>
            </div>
        </div>
    </div>
    
    <div class="dashboard-container">
        <div class="container">
            <div class="welcome-section">
                <h2>Business Analytics</h2>
                <p>Comprehensive Insights & Performance Metrics</p>
            </div>
            
            <!-- Key Performance Indicators -->
            <div class="revenue-stats">
                <div class="revenue-card">
                    <div class="revenue-amount">$<%= sprintf('%.2f', @total_revenue) %></div>
                    <div class="stat-label">Total Revenue</div>
                </div>
                <div class="revenue-card">
                    <div class="stat-number"><%= @total_orders %></div>
                    <div class="stat-label">Total Orders</div>
                </div>
                <div class="revenue-card">
                    <div class="stat-number"><%= @total_users %></div>
                    <div class="stat-label">Total Users</div>
                </div>
                <div class="revenue-card">
                    <div class="revenue-amount">$<%= sprintf('%.2f', @average_order_value) %></div>
                    <div class="stat-label">Avg. Order Value</div>
                </div>
            </div>
            
            <!-- Charts Section -->
            <div class="chart-container">
                <h3><i class="fas fa-chart-line me-2"></i>Orders & Revenue Trend (Last 7 Days)</h3>
                <canvas id="trendChart"></canvas>
            </div>
            
            <div class="chart-container">
                <h3><i class="fas fa-chart-pie me-2"></i>Order Status Distribution</h3>
                <canvas id="orderStatusChart"></canvas>
            </div>
            
            <!-- Top Menu Items -->
            <div class="chart-container">
                <h3><i class="fas fa-utensils me-2"></i>Top Menu Items</h3>
                <table class="top-items-table">
                    <thead>
                        <tr>
                            <th>Menu Item</th>
                            <th>Orders</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% @top_menu_items.each do |name, count| %>
                            <tr>
                                <td><%= name %></td>
                                <td><%= count %></td>
                            </tr>
                        <% end %>
                        
                        <% if @top_menu_items.empty? %>
                            <tr>
                                <td colspan="2" class="text-center">No menu items ordered yet</td>
                            </tr>
                        <% end %>
                    </tbody>
                </table>
            </div>
            
            <!-- User Registrations -->
            <div class="chart-container">
                <h3><i class="fas fa-user-plus me-2"></i>User Registrations (Last 7 Days)</h3>
                <canvas id="userRegistrationChart"></canvas>
            </div>
            
            <!-- Customer Feedback -->
            <div class="chart-container">
                <h3><i class="fas fa-star me-2"></i>Customer Feedback</h3>
                <div class="stats-container">
                    <div class="stat-card">
                        <div class="stat-number"><%= @feedback_stats.values.sum %></div>
                        <div class="stat-label">Total Reviews</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number"><%= @average_rating %></div>
                        <div class="stat-label">Average Rating</div>
                    </div>
                </div>
                
                <% if @feedback_stats.any? %>
                    <div class="mt-4">
                        <% @feedback_stats.sort_by { |rating, count| -rating }.each do |rating, count| %>
                            <div class="d-flex align-items-center mb-2">
                                <div class="rating-badge rating-<%= rating %> me-3">
                                    <%= rating %> Star<%= rating > 1 ? 's' : '' %>
                                </div>
                                <div class="flex-grow-1">
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar" 
                                             role="progressbar" 
                                             style="width: <%= (@feedback_stats.values.sum > 0) ? (count.to_f / @feedback_stats.values.sum * 100) : 0 %>%"
                                             aria-valuenow="<%= count %>" 
                                             aria-valuemin="0" 
                                             aria-valuemax="<%= @feedback_stats.values.sum %>">
                                            <%= count %> reviews
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% end %>
                    </div>
                <% else %>
                    <p class="text-center mt-3">No feedback received yet</p>
                <% end %>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize charts when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializeTrendChart();
            initializeOrderStatusChart();
            initializeUserRegistrationChart();
        });
        
        function initializeTrendChart() {
            const ctx = document.getElementById('trendChart').getContext('2d');
            
            // Prepare data for the chart
            const dates = [];
            const orderCounts = [];
            const revenueAmounts = [];
            
            // Get order data from Ruby
            const ordersByDay = {
                <% @orders_by_day.each do |date, count| %>
                    '<%= date %>': <%= count %>,
                <% end %>
            };
            
            // Get revenue data from Ruby
            const revenueByDay = {
                <% @revenue_by_day.each do |date, amount| %>
                    '<%= date %>': <%= amount %>,
                <% end %>
            };
            
            // Populate arrays for chart (last 7 days)
            const today = new Date();
            for (let i = 6; i >= 0; i--) {
                const date = new Date(today);
                date.setDate(date.getDate() - i);
                const dateString = date.toISOString().split('T')[0];
                
                dates.push(dateString);
                orderCounts.push(ordersByDay[dateString] || 0);
                revenueAmounts.push(revenueByDay[dateString] || 0);
            }
            
            // Create the chart
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [
                        {
                            label: 'Orders',
                            data: orderCounts,
                            borderColor: '#42A5F5',
                            backgroundColor: 'rgba(66, 165, 245, 0.1)',
                            borderWidth: 3,
                            fill: true,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Revenue ($)',
                            data: revenueAmounts,
                            borderColor: '#66BB6A',
                            backgroundColor: 'rgba(102, 187, 106, 0.1)',
                            borderWidth: 3,
                            fill: true,
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Number of Orders'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: 'white'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Revenue ($)'
                            },
                            grid: {
                                drawOnChartArea: false,
                            },
                            ticks: {
                                color: 'white'
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: 'white'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                color: 'white',
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleColor: 'white',
                            bodyColor: 'white',
                            borderColor: 'rgba(255, 255, 255, 0.1)',
                            borderWidth: 1
                        }
                    }
                }
            });
        }
        
        function initializeOrderStatusChart() {
            const ctx = document.getElementById('orderStatusChart').getContext('2d');
            
            // Prepare data for the chart
            const statusLabels = [];
            const statusData = [];
            const statusColors = [];
            
            // Define colors for each status
            const colors = {
                'pending': '#FFA726',
                'cooking': '#42A5F5',
                'ready': '#66BB6A',
                'completed': '#26C6DA',
                'cancelled': '#EF5350'
            };
            
            // Get order status data from Ruby
            const orderStatusData = {
                <% @orders_by_status.each do |status, count| %>
                    '<%= status %>': <%= count %>,
                <% end %>
            };
            
            // Populate arrays for chart
            for (const [status, count] of Object.entries(orderStatusData)) {
                statusLabels.push(status.charAt(0).toUpperCase() + status.slice(1));
                statusData.push(count);
                statusColors.push(colors[status] || '#9E9E9E');
            }
            
            // If no data, show a message
            if (statusLabels.length === 0) {
                statusLabels.push('No Orders');
                statusData.push(1);
                statusColors.push('#9E9E9E');
            }
            
            // Create the chart
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: statusLabels,
                    datasets: [{
                        data: statusData,
                        backgroundColor: statusColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: 'white',
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleColor: 'white',
                            bodyColor: 'white',
                            borderColor: 'rgba(255, 255, 255, 0.1)',
                            borderWidth: 1,
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = Math.round((value / total) * 100);
                                    return `${label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
        }
        
        function initializeUserRegistrationChart() {
            const ctx = document.getElementById('userRegistrationChart').getContext('2d');
            
            // Prepare data for the chart
            const dates = [];
            const registrationCounts = [];
            
            // Get user registration data from Ruby
            const userRegistrationsByDay = {
                <% @user_registrations_by_day.each do |date, count| %>
                    '<%= date %>': <%= count %>,
                <% end %>
            };
            
            // Populate arrays for chart (last 7 days)
            const today = new Date();
            for (let i = 6; i >= 0; i--) {
                const date = new Date(today);
                date.setDate(date.getDate() - i);
                const dateString = date.toISOString().split('T')[0];
                
                dates.push(dateString);
                registrationCounts.push(userRegistrationsByDay[dateString] || 0);
            }
            
            // Create the chart
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'New User Registrations',
                        data: registrationCounts,
                        backgroundColor: 'rgba(156, 39, 176, 0.7)',
                        borderColor: 'rgba(156, 39, 176, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: 'white',
                                precision: 0
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            },
                            ticks: {
                                color: 'white'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                color: 'white',
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(0, 0, 0, 0.7)',
                            titleColor: 'white',
                            bodyColor: 'white',
                            borderColor: 'rgba(255, 255, 255, 0.1)',
                            borderWidth: 1
                        }
                    }
                }
            });
        }
    </script>
</body>
</html>