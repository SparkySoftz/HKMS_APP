<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Today's Menu - HKMS</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem 1rem;
            color: white;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            animation: fadeInDown 1s ease-out;
        }
        
        .header-title {
            font-size: 2rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        
        .table-info {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 0.5rem 1rem;
            backdrop-filter: blur(5px);
        }
        
        .menu-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-bottom: 3rem;
        }
        
        .menu-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 1.5rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
            animation: fadeInUp 0.8s ease-out;
        }
        
        .menu-card:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.2);
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        }
        
        .menu-name {
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .menu-description {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 1rem;
            min-height: 60px;
        }
        
        .menu-price {
            font-size: 1.5rem;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 1rem;
        }
        
        .menu-ingredients {
            font-size: 0.8rem;
            opacity: 0.7;
            margin-bottom: 1rem;
            padding: 0.5rem;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 5px;
        }
        
        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }
        
        .quantity-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        
        .quantity-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }
        
        .quantity-input {
            width: 50px;
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            border-radius: 5px;
            padding: 0.25rem;
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .btn-success {
            background: linear-gradient(45deg, #28a745, #20c997);
            border: none;
        }
        
        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        }
        
        .order-summary {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 1.5rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            margin-top: 2rem;
        }
        
        .order-items {
            max-height: 200px;
            overflow-y: auto;
            margin-bottom: 1rem;
        }
        
        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .order-total {
            font-size: 1.3rem;
            font-weight: bold;
            text-align: right;
            margin: 1rem 0;
        }
        
        .action-buttons {
            display: flex;
            gap: 1rem;
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #007bff, #0056b3);
            border: none;
            flex: 1;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 123, 255, 0.4);
        }
        
        .btn-warning {
            background: linear-gradient(45deg, #ffc107, #e0a800);
            border: none;
            flex: 1;
        }
        
        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 193, 7, 0.4);
        }
        
        .no-menu {
            text-align: center;
            padding: 3rem;
            color: rgba(255, 255, 255, 0.8);
            font-size: 1.1rem;
        }
        
        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .menu-grid {
                grid-template-columns: 1fr;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="header-title">
                <i class="fas fa-utensils"></i> Today's Menu
            </h1>
            <div class="table-info">
                <i class="fas fa-chair"></i> <%= @table.display_name %> | 
                <i class="fas fa-user"></i> <%= session[:customer_name] %>
            </div>
        </div>
        
        <% if @menu_items.any? %>
            <div class="menu-grid">
                <% @menu_items.each do |item| %>
                    <div class="menu-card">
                        <div class="menu-name"><%= item.name %></div>
                        <div class="menu-description"><%= item.description %></div>
                        <div class="menu-price">LKR <%= item.price %></div>
                        
                        <% if item.ingredients.present? %>
                            <div class="menu-ingredients">
                                <strong>Ingredients:</strong> <%= item.ingredients %>
                            </div>
                        <% end %>
                        
                        <div class="quantity-controls">
                            <span>Quantity:</span>
                            <div class="quantity-btn" onclick="changeQuantity(<%= item.id %>, -1)">-</div>
                            <input type="number" id="quantity_<%= item.id %>" class="quantity-input" value="1" min="1">
                            <div class="quantity-btn" onclick="changeQuantity(<%= item.id %>, 1)">+</div>
                        </div>
                        
                        <button class="btn btn-success" onclick="addToOrder(<%= item.id %>)">
                            <i class="fas fa-plus"></i> Add to Order
                        </button>
                    </div>
                <% end %>
            </div>
        <% else %>
            <div class="no-menu">
                <i class="fas fa-concierge-bell fa-3x mb-3"></i>
                <p>No menu items available for today.</p>
                <p>Please check back later or contact our staff.</p>
            </div>
        <% end %>
        
        <div class="order-summary">
            <h3><i class="fas fa-shopping-cart"></i> Your Order</h3>
            <div class="order-items" id="orderItems">
                <!-- Order items will be loaded here dynamically -->
                <div class="text-center text-muted">
                    <i class="fas fa-info-circle"></i> No items added yet
                </div>
            </div>
            
            <div class="order-total">
                Total: <span id="orderTotal">LKR 0.00</span>
            </div>
            
            <div class="action-buttons">
                <a href="<%= customer_view_order_path %>" class="btn btn-warning">
                    <i class="fas fa-list"></i> View Full Order
                </a>
                <button class="btn btn-primary" onclick="placeOrder()">
                    <i class="fas fa-paper-plane"></i> Place Order
                </button>
            </div>
        </div>
    </div>
    
    <script>
        // Auto-refresh order summary every 30 seconds
        let refreshInterval;
        
        function startAutoRefresh() {
            refreshInterval = setInterval(function() {
                updateOrderSummary();
            }, 30000); // Refresh every 30 seconds
        }
        
        function stopAutoRefresh() {
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }
        }
        
        function updateOrderSummary() {
            fetch('<%= customer_view_order_path %>', {
                headers: {
                    'Accept': 'text/html',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                // Create a temporary DOM element to parse the response
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                
                // Extract order items and total from the response
                const orderItems = doc.querySelector('.order-items');
                const orderTotal = doc.querySelector('#orderTotal');
                
                if (orderItems && orderTotal) {
                    // Update the order items section
                    document.querySelector('#orderItems').innerHTML = orderItems.innerHTML;
                    
                    // Update the order total
                    document.querySelector('#orderTotal').textContent = orderTotal.textContent;
                }
            })
            .catch(error => {
                console.error('Auto-refresh error:', error);
            });
        }
        
        function changeQuantity(itemId, change) {
            const input = document.getElementById('quantity_' + itemId);
            let value = parseInt(input.value) || 1;
            value += change;
            if (value < 1) value = 1;
            input.value = value;
        }
        
        function addToOrder(menuItemId) {
            const quantity = document.getElementById('quantity_' + menuItemId).value;
            
            fetch('<%= customer_add_to_order_path %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
                },
                body: JSON.stringify({
                    menu_item_id: menuItemId,
                    quantity: quantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update order summary
                    document.getElementById('orderTotal').textContent = 'LKR ' + data.order_total.toFixed(2);
                    alert('Item added to your order!');
                    // Refresh the order summary to show the new item
                    updateOrderSummary();
                } else {
                    alert('Failed to add item: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while adding the item.');
            });
        }
        
        function placeOrder() {
            if (confirm('Are you sure you want to place this order?')) {
                // Redirect to place order
                window.location.href = '<%= customer_place_order_path %>';
            }
        }
        
        // Start auto-refresh when page loads
        document.addEventListener('DOMContentLoaded', function() {
            startAutoRefresh();
        });
        
        // Clean up interval when page is unloaded
        window.addEventListener('beforeunload', function() {
            stopAutoRefresh();
        });
    </script>
</body>
</html>